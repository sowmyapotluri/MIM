<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CantLogIn" xml:space="preserve">
    <value>We couldn't log you in. Please try again later.</value>
    <comment>Login failure error message</comment>
  </data>
  <data name="CommandNotRecognized" xml:space="preserve">
    <value>Cannot recognize **{command}** as valid command. Please type 'Help' to see all available commands.</value>
    <comment>Message which will be displayed if user types command unknown to bot</comment>
  </data>
  <data name="ExceptionResponse" xml:space="preserve">
    <value>Something went wrong and I can’t do that right now. Try again in a few minutes.</value>
    <comment>Generic error message</comment>
  </data>
  <data name="LoggedInSuccess" xml:space="preserve">
    <value>You are logged in successfully!</value>
    <comment>Login success message</comment>
  </data>
  <data name="LogoutSuccess" xml:space="preserve">
    <value>You have been signed out.</value>
    <comment>Logout message</comment>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
    <comment>Sign in button text</comment>
  </data>
  <data name="SignInRequired" xml:space="preserve">
    <value>Sign in required</value>
    <comment>Sign in card title</comment>
  </data>
  <data name="WelcomeCardTitle" xml:space="preserve">
    <value>Welcome</value>
    <comment>Welcome label</comment>
  </data>
  <data name="InvalidTenant" xml:space="preserve">
    <value>You're not authorized to access this bot. Please contact your administrator for help.</value>
    <comment>Message to be showed if tenant id doesn't match with authorized tenant</comment>
  </data>
  <data name="DoneButton" xml:space="preserve">
    <value>Done</value>
    <comment>Done button in client app</comment>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
    <comment>Location label used in manage favorites</comment>
  </data>
  <data name="LoadingMessage" xml:space="preserve">
    <value>Loading...</value>
    <comment>Loading message to be displayed while time zones loads in dropdown</comment>
  </data>
  <data name="SignInErrorMessage" xml:space="preserve">
    <value>You're not signed in to perform this action. Please type 'Sign in' to proceed.</value>
    <comment>Bot response when user tries to open task module after log out.</comment>
  </data>
  <data name="SupportedCommands" xml:space="preserve">
    <value>I can only support below commands.</value>
    <comment>Text to be displayed in help card</comment>
  </data>
  <data name="EditWorkstream" xml:space="preserve">
    <value>Edit workstream</value>
    <comment>Subtitle for task module to edit workstreams</comment>
  </data>
  <data name="CreateIncident" xml:space="preserve">
    <value>Create Incident</value>
    <comment>Create incident task module subtitle</comment>
  </data>
  <data name="Bridge" xml:space="preserve">
    <value>Incident conference bridge</value>
  </data>
  <data name="CloseIncidentTextCarousel" xml:space="preserve">
    <value>Close the incident</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>Created on</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ReportIncidentHeaderCarousel" xml:space="preserve">
    <value>Report an incident
</value>
  </data>
  <data name="Scope" xml:space="preserve">
    <value>Scope</value>
  </data>
  <data name="ShortDescription" xml:space="preserve">
    <value>Short description</value>
  </data>
  <data name="TakeTour" xml:space="preserve">
    <value>Take a Tour</value>
  </data>
  <data name="UpdateWorkstreamHeaderCarousel" xml:space="preserve">
    <value>Update workstream</value>
  </data>
  <data name="UpdateWorkstreamTextCarousel" xml:space="preserve">
    <value>To create, view and add people in workstream</value>
  </data>
  <data name="ViewIncidents" xml:space="preserve">
    <value>View incidents</value>
  </data>
  <data name="ViewWorkstreams" xml:space="preserve">
    <value>View workstreams</value>
  </data>
  <data name="WelcomeCardTextLine1" xml:space="preserve">
    <value>I am on call assistant BOT that can help create, manage and resolve incidents.</value>
  </data>
  <data name="WelcomeCardTextLine2" xml:space="preserve">
    <value>Here's what i can help with,</value>
  </data>
  <data name="WelcomeCardTextLine3" xml:space="preserve">
    <value>Create new incident</value>
  </data>
  <data name="WelcomeCardTextLine4" xml:space="preserve">
    <value>Create, Edit and assign workstreams</value>
  </data>
  <data name="WelcomeCardTextLine5" xml:space="preserve">
    <value>Resolve or close incidents</value>
  </data>
  <data name="WelcomeText" xml:space="preserve">
    <value>Welcome!</value>
  </data>
</root>